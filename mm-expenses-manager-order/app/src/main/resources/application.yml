app:
  configuration:
    name: @project.name@
    version: @project.version@
    description: @project.description@
    active-profile: @active-profile@
    port: 8181
    contact:
      name: @developer-name@
      email: @developer-email@
      role: @developer-role@
    api:
      url: /api
      ui-url: ${app.configuration.api.url}/ui
      disable-default-url: true
    database:
      mongodb:
        user: admin
        password: gP_h3cS!Lqu-4
        name: expenses-manager-order
        host: localhost
        port: 27017
        uri: mongodb://${app.configuration.database.mongodb.user}:${app.configuration.database.mongodb.password}@${app.configuration.database.mongodb.host}:${app.configuration.database.mongodb.port}/${app.configuration.database.mongodb.name}?authSource=admin
    pagination:
      min-page-number: 0
      default-page-size: 10
      max-page-size: 50
    message-broker:
      type: kafka
      enabled: true
      brokers: localhost:9092
      protocol: PLAINTEXT
      username: kafka
      password: kafka
      topics:
        product-management: product-management

server:
  port: ${app.configuration.port}

spring:
  application:
    name: ${app.configuration.name}
  profiles:
    active: ${app.configuration.active-profile}
  data:
    mongodb:
      uri: ${app.configuration.database.mongodb.uri}
      auto-index-creation: true
    web:
      pageable:
        default-page-size: ${app.configuration.pagination.default-page-size}
        max-page-size: ${app.configuration.pagination.max-page-size}
  cloud:
    stream:
      default-binder: ${app.configuration.message-broker.type}
      kafka:
        binder:
          brokers:
            - ${app.configuration.message-broker.brokers}
          configuration:
            security.protocol: ${app.configuration.message-broker.protocol}
            sasl.mechanism: SCRAM-SHA-512
            sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username='${app.configuration.message-broker.username}' password='${app.configuration.message-broker.password}';
      bindings:
        productManagement-in-0:
          binder: ${app.configuration.message-broker.type}
          group: @project.name@
          content-type: application/json
          destination: ${app.configuration.message-broker.topics.product-management}
    function:
      definition: productManagement

springdoc:
  swagger-ui:
    path: ${app.configuration.api.ui-url}
    disable-swagger-default-url: ${app.configuration.api.disable-default-url}
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: ${app.configuration.api.url}