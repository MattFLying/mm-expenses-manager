app:
  configuration:
    name: @project.name@
    version: @project.version@
    description: @project.description@
    active-profile: dev
    port: 8185
    scheduled-thread-pool-size: 100
    contact:
      name: @developer-name@
      email: @developer-email@
      role: @developer-role@
    api:
      url: /api
      ui-url: ${app.configuration.api.url}/ui
      disable-default-url: true
    database:
      mongodb:
        user: admin
        password: gP_h3cS!Lqu-4
        name: expenses-manager-finance
        host: localhost
        port: 27017
        uri: mongodb://${app.configuration.database.mongodb.user}:${app.configuration.database.mongodb.password}@${app.configuration.database.mongodb.host}:${app.configuration.database.mongodb.port}/${app.configuration.database.mongodb.name}?authSource=admin
    cache:
      type: simple # 'simple' or 'redis'
      clear-cron: "0 0 * ? * *" # every 1h
      redis:
        enabled: "#{${app.configuration.cache.type} == `redis`} ? true : false"
        host: localhost
        port: 6379
    pageable:
      min-page-number: 0
      default-page-size: 10
      max-page-size: 50
  currency:
    default: app.currency.provider.nbp # path to default provider property
    default-provider: ${${app.currency.default}.name}
    default-currency: PLN
    synchronization-cron: "0 0 * ? * *" # every 1 hour
    reschedule-when-synchronization-failed-cron: "0 */15 * ? * *" # every 15 minutes
    clean-reschedule-cron: "0 */5 * ? * *" # every 5 minutes
    provider:
      nbp:
        name: nbp
        client: npb-client
        url: http://api.nbp.pl/api/exchangerates
        details:
          data-format: json
          history-from-year: 2002
          max-days-to-fetch: 90
  kafka:
    enabled: true
    brokers: localhost:9092
    type: kafka
    username: kafka
    password: kafka

server:
  port: ${app.configuration.port}

spring:
  application:
    name: ${app.configuration.name}
  profiles:
    active: dev
  cache:
    type: ${app.configuration.cache.type}
  redis:
    enabled: ${app.configuration.cache.redis.enabled}
    host: ${app.configuration.cache.redis.host}
    port: ${app.configuration.cache.redis.port}
  data:
    mongodb:
      uri: ${app.configuration.database.mongodb.uri}
      auto-index-creation: true
    web:
      pageable:
        default-page-size: ${app.configuration.pageable.default-page-size}
        max-page-size: ${app.configuration.pageable.max-page-size}
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${app.kafka.brokers}
      binders:
        kafka:
          type: ${app.kafka.type}

springdoc:
  swagger-ui:
    path: ${app.configuration.api.ui-url}
    disable-swagger-default-url: ${app.configuration.api.disable-default-url}
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: ${app.configuration.api.url}
